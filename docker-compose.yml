version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "zookeeper-shell", "localhost:2181", "ls", "/"]
      interval: 10s
      timeout: 10s
      retries: 3

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --list --zookeeper zookeeper:2181"]
      interval: 10s
      timeout: 10s
      retries: 3

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    depends_on:
      broker:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - AWS_ACCESS_KEY_ID=<access key>
      - AWS_SECRET_ACCESS_KEY=<secret access key>

    volumes:
      - ./kafka-s3:/app

  consumer:
    build:
      context: ./consume
      dockerfile: Dockerfile
    depends_on:
      broker:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
    volumes:
      - ./consumer:/app

